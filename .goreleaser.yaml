version: 2

project_name: g0efilter

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: g0efilter
    main: ./cmd/g0efilter
    binary: g0efilter
    env: ["CGO_ENABLED=0"]
    goos: [linux]
    goarch: [amd64, arm64]
    flags: ["-trimpath"]   
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .Date }}

  - id: g0efilter-dashboard
    main: ./cmd/g0efilter-dashboard
    binary: g0efilter-dashboard
    env: ["CGO_ENABLED=0"]
    goos: [linux]
    goarch: [amd64, arm64]
    flags: ["-trimpath"]   
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .Date }}

checksum:
  name_template: "checksums.txt"

dockers_v2:
  - id: g0efilter
    dockerfile: ./Dockerfile
    images:
      - docker.io/g0lab/g0efilter
    tags:
      - "{{ .Tag }}"
      - latest
    platforms:
      - linux/amd64
      - linux/arm64
    labels:
      org.opencontainers.image.source: "https://github.com/g0lab/g0efilter"
      org.opencontainers.image.title: "g0efilter"
      org.opencontainers.image.version: "{{ .Version }}"
      org.opencontainers.image.revision: "{{ .Commit }}"
      org.opencontainers.image.created: "{{ .Date }}"

  - id: g0efilter-dashboard
    dockerfile: ./Dockerfile-dashboard
    images:
      - docker.io/g0lab/g0efilter-dashboard
    tags:
      - "{{ .Tag }}"
      - latest
    platforms:
      - linux/amd64
      - linux/arm64
    labels:
      org.opencontainers.image.source: "https://github.com/g0lab/g0efilter"
      org.opencontainers.image.title: "g0efilter-dashboard"
      org.opencontainers.image.version: "{{ .Version }}"
      org.opencontainers.image.revision: "{{ .Commit }}"
      org.opencontainers.image.created: "{{ .Date }}"

release:
  github:
    owner: g0lab
    name: g0efilter
  draft: false          
  prerelease: auto

changelog:
  use: github 
  format: "{{.SHA}}: {{.Message}} (@{{.AuthorUsername}})"
  abbrev: 7          
  sort: asc
  groups:                     
    - title: "Features"
      regexp: '^.*?(?i:(feat|feature|enhance|add|introduce|allow|improve|bump|migrate|implement|support|enable|update|refactor))'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?(?i:(fix|bug|revert|hotfix|correct|workaround|issue))'
      order: 1
    - title: "Documentation"
      regexp: '^.*?(?i:(docs?|documentation|readme))'
      order: 2
    - title: "Misc"
      order: 99
  filters:
    exclude:
      - '^ci:'
      - '^tests:'
      - '^docs:'
      - '^style:'
      - '^test:'
      - '^doc:'
      - 'merge conflict'
      - 'Merge branch'
      - 'Merge pull request'

signs:
  - cmd: cosign
    artifacts: checksum
    signature: "${artifact}.sigstore" 
    args:
      - sign-blob
      - --bundle=${artifact}.sigstore
      - ${artifact}
      - --yes
    output: true

docker_signs:
  - cmd: cosign
    artifacts: all
    args:
      - sign
      - ${artifact}@${digest}
      - --yes
    output: true