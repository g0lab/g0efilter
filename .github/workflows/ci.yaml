name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  GOLANGCI_LINT_VERSION: latest

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go (from go.mod)
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: go mod tidy check
        run: |
          go mod tidy
          git diff --exit-code

      - name: go vet
        run: go vet ./...

  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    needs: [validate]

    steps:
      - uses: actions/checkout@v5

      - name: Setup Go (from go.mod)
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -race -covermode=atomic -coverprofile=coverage.txt ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          args: >
            --timeout=10m
            ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.txt

  # build-smoke:
  #   needs: [test-and-lint]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       goos:   [linux]
  #       goarch: [amd64, arm64]
  #       target: [g0efilter, g0efilter-dashboard]
  #   env:
  #     CGO_ENABLED: 0
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-go@v6
  #       with:
  #         go-version-file: go.mod
  #         check-latest: true
  #         cache: true
  #     - name: Smoke build ${{ matrix.target }} (${{ matrix.goos }}/${{ matrix.goarch }})
  #       run: |
  #         GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
  #         go build -trimpath -o /dev/null ./cmd/${{ matrix.target }}
